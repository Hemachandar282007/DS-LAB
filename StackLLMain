class Node {
	int data;
	Node next;
	Node(int value) {
		data = value;
		next = null;
	}
}
class StackLL {
	private Node top;
	StackLL() {
		top = null;
	}
	public void push(int value) {
		Node newNode = new Node(value);
		newNode.next = top;
		top = newNode;
	}
	public int pop() {
		if(isEmpty()) {
			System.out.println("Stack Underflow");
			return -1;
		}
		int value = top.data;
		top = top.next;
		return value;
	}
	public int peek() {
		if(isEmpty()) {
			System.out.println("Stack is Empyty");
			return -1;
		}
		return top.data;
	}
	public boolean isEmpty() {
		return top == null;
	}
	public void display() {
		if(isEmpty()) {
			System.out.println("Stack is Empty");
			return;
		}
		Node temp = top;
		System.out.println("Stack (top to bottom):");
		while(temp != null) {
			System.out.println(temp.data + " ");
			temp = temp.next;
		}
		System.out.println();
	}
}
class StackLLMain {
	public static void main(String[] args) {
		StackLL stack = new StackLL();
		
		stack.push(100);
		stack.push(200);
		stack.push(300);
		stack.display();
		
		System.out.println("Popped:" + stack.pop());
		stack.display();
	}
}



Output:
Stack (top to bottom):
300
200
100

Popped:300
Stack (top to bottom):
200
100
